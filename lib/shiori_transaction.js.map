{"version":3,"sources":["shiori_transaction.js","lib/shiori_transaction.js"],"names":[],"mappings":"AAAA;AACA,ACDA,YAAY,CAAC;;;;;;;;;;AAEb,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;AAClC,MAAI,eAAe,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC,eAAe,CAAC;CACnE;;;;;AAAA;IAKK,iBAAiB;;;;;;AAKrB,WALI,iBAAiB,GAKP;0BALV,iBAAiB;GAMpB;;;;;;AAAA;eANG,iBAAiB;;;;;;;;;+BAoDV,OAAO,EAAE;AAClB,aAAO,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KAC1D;;;;;;;;;;;gCAQW,OAAO,EAAE;AACnB,aAAO,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;KAC1E;;;wBApDa;AACZ,aAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;sBAOW,OAAO,EAAE;AACnB,UAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AACxB,UAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9C,aAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;wBAMc;AACb,aAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;sBAOY,QAAQ,EAAE;AACrB,UAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,UAAI,CAAC,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChD,aAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;SA5CG,iBAAiB;;;QAoEf,iBAAiB,GAAjB,iBAAiB","file":"lib/shiori_transaction.js","sourcesContent":[null,"'use strict';\n\nif (typeof require !== 'undefined') {\n  var ShioriConverter = require('shiori_converter').ShioriConverter;\n}\n\n/**\n * SHIORI/2.x/3.x transaction class with protocol version converter\n */\nclass ShioriTransaction {\n  /**\n   * constructor\n   * @return {ShioriTransaction} this\n   */\n  constructor() {\n  }\n\n  /**\n   * request\n   * @return {ShioriJK.Message.Request} request\n   */\n  get request() {\n    return this._request;\n  }\n\n  /**\n   * request\n   * @param {ShioriJK.Message.Request} request - request\n   * @return {ShioriJK.Message.Request} request\n   */\n  set request(request) {\n    this._request = request;\n    this._request.to = this.request_to.bind(this);\n    return this._request;\n  }\n\n  /**\n   * response\n   * @return {ShioriJK.Message.Response} response\n   */\n  get response() {\n    return this._response;\n  }\n\n  /**\n   * response\n   * @param {ShioriJK.Message.Response} response - response\n   * @return {ShioriJK.Message.Response} response\n   */\n  set response(response) {\n    this._response = response;\n    this._response.to = this.response_to.bind(this);\n    return this._response;\n  }\n\n  /**\n   * convert request to specified protocol version\n   * (this method needs ShioriConverter)\n   * @param {string} version - target protocol version\n   * @return {ShioriJK.Message.Request} specified version request\n   */\n  request_to(version) {\n    return ShioriConverter.request_to(this.request, version);\n  }\n\n  /**\n   * convert response to specified protocol version\n   * (this method needs ShioriConverter)\n   * @param {string} version - target protocol version\n   * @return {ShioriJK.Message.Response} specified version response\n   */\n  response_to(version) {\n    return ShioriConverter.response_to(this.request, this.response, version);\n  }\n\n}\n\nexport {ShioriTransaction};\n"],"sourceRoot":"/source/"}